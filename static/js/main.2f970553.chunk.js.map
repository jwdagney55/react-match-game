{"version":3,"sources":["logo.svg","App.tsx","components/Card.tsx","Game-Board/Game-Board.tsx","components/ScoreCard.tsx","reportWebVitals.ts","index.tsx"],"names":["App","className","src","logo","alt","href","target","rel","Card","stuff","React","useState","isFlipped","setIsFlipped","handleClick","flipDirection","onClick","cardNum","word","GameBoard","ScoreCard","score","totalScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,G,MAAA,IAA0B,kC,eC8B1BA,MAzBf,WAIE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+B,4BCMOC,MAhBf,SAAcC,GACV,MAAkCC,IAAMC,UAAS,GAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,WAChBD,GAAcD,IAGlB,OACI,eAAC,IAAD,CAAeA,UAAaA,EAAWG,cAAc,WAArD,UACI,oBAAIC,QAASF,EAAb,SAA2BL,EAAMQ,UAEjC,oBAAID,QAASF,EAAb,SAA2BL,EAAMS,WCY9BC,MAtBf,WAGI,OACI,sBAAKlB,UAAU,aAAf,UACI,6CACA,kCACI,+BACI,6BAAI,cAAC,EAAD,CAAMgB,QAAS,IAAKC,KAAM,YAC9B,6BAAI,cAAC,EAAD,CAAMD,QAAS,IAAKC,KAAM,YAC9B,6BAAI,cAAC,EAAD,CAAMD,QAAS,IAAKC,KAAM,gBAElC,+BACI,6BAAI,cAAC,EAAD,CAAMD,QAAS,IAAKC,KAAM,aAC9B,6BAAI,cAAC,EAAD,CAAMD,QAAS,IAAKC,KAAM,aAC9B,6BAAI,cAAC,EAAD,CAAMD,QAAS,IAAKC,KAAM,uBCTnCE,MATf,SAAmBC,GAEf,OACI,8BACI,oBAAGpB,UAAU,YAAb,qBAAkCoB,EAAMC,iBCMrCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWZ,WAAY,OAEzBa,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2f970553.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\n\r\nimport '../Game-Board/Game-Board.css';\r\n\r\nfunction Card(stuff: {cardNum: string; word: string}): JSX.Element {\r\n    const [isFlipped, setIsFlipped] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setIsFlipped(!isFlipped);\r\n    }\r\n\r\n    return (\r\n        <ReactCardFlip isFlipped = {isFlipped} flipDirection=\"vertical\">\r\n            <td onClick={handleClick}>{stuff.cardNum}</td>\r\n\r\n            <td onClick={handleClick}>{stuff.word}</td>\r\n        </ReactCardFlip>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport Card from '../components/Card';\r\n\r\n\r\nimport './Game-Board.css';\r\n\r\nfunction GameBoard() {\r\n    //Set state of card to be not flipped\r\n\r\n    return(\r\n        <div className=\"Game-Board\">\r\n            <h2>Match Game!</h2>\r\n            <table>\r\n                <tr>\r\n                    <td><Card cardNum={\"1\"} word={\"apple\"} /></td>\r\n                    <td><Card cardNum={\"2\"} word={\"apple\"} /></td>\r\n                    <td><Card cardNum={\"3\"} word={\"orange\"} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><Card cardNum={\"4\"} word={\"banana\"} /></td>\r\n                    <td><Card cardNum={\"5\"} word={\"banana\"} /></td>\r\n                    <td><Card cardNum={\"6\"} word={\"orange\"} /></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameBoard;","import React from 'react';\r\n\r\nimport '../Game-Board/Game-Board.css';\r\n\r\nfunction ScoreCard(score: {totalScore: number}): JSX.Element{\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"ScoreCard\">Score 0/{score.totalScore}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreCard;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GameBoard from './Game-Board/Game-Board'\nimport ScoreCard from './components/ScoreCard'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GameBoard />\n    <ScoreCard totalScore={6} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}